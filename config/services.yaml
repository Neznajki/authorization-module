imports:
    - { resource: 'api/jsonRpc/services.yaml' }
    - { resource: 'services/repository.yaml' }
    - { resource: '@JsonRpcAuthBundle/Resources/config/services.yaml' }
    - { resource: '@JsonRpcServerBundle/Resources/config/services.yaml' }

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    server.json.rpc.user.name: authorization
    server.json.rpc.user.password: qwerty
    json_rpc_http_server.http_endpoint_path: '/jsonRpc'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Repository,Migrations,Tests,Kernel.php,Api}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    Symfony\Component\HttpKernel\Kernel: '@kernel'

    Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface:
        class: App\Service\PasswordEncryptService

    App\Service\RegistryService:
        class: App\Service\RegistryService
        arguments:
            - '%env(GUI_URI)%'

